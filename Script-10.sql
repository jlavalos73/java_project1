DROP TABLE reimbursement CASCADE CONSTRAINTS;
CREATE TABLE reimbursement(
	r_id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
	r_amount NUMBER(6,2) NOT NULL,
	r_submitted TIMESTAMP NOT NULL,
	r_resolved TIMESTAMP,
	r_description VARCHAR2(250) NOT NULL,
	r_receipt BLOB,
	r_author NUMBER REFERENCES users (user_id),
	r_resolver NUMBER REFERENCES users (user_id),
	r_status_id NUMBER REFERENCES reimbursement_status (r_status_id),
	r_type_id NUMBER REFERENCES reimbursement_type (r_type_id),
	
	CONSTRAINT reimbursement_pk PRIMARY KEY (r_id)
);

CREATE OR REPLACE PROCEDURE insert_reim(
	amount IN NUMBER, submitted IN TIMESTAMP, description IN VARCHAR2, author IN NUMBER, 
	status IN NUMBER, r_type IN NUMBER
)
IS
BEGIN
	INSERT INTO REIMBURSEMENT (r_amount, r_submitted, r_description, r_author, r_status_id, r_type_id)
		VALUES (amount, submitted, description, author, status, r_type);
	COMMIT;
END;

{CALL insert_reim('86.73', '19-MAR-20 8:50:00', 'Hotel in DC', '22', '1', '2')}


CREATE OR REPLACE PROCEDURE approve_reim(
	id IN NUMBER, resolved IN TIMESTAMP, approver IN NUMBER, status IN NUMBER
)
IS
BEGIN
	UPDATE reimbursement SET r_resolved = resolved, r_resolver = approver,
		r_status_id = status WHERE r_id = id;
	COMMIT;
END;

{CALL approve_reim('1', '19-MAR-20 12:43:00', '1', '3')}



DROP TABLE users CASCADE CONSTRAINTS;
CREATE TABLE users (
	user_id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
	username VARCHAR2(50) UNIQUE NOT NULL,
	password VARCHAR2(50) NOT NULL,
	first_name VARCHAR2(100) NOT NULL,
	last_name VARCHAR2(100) NOT NULL,
	email VARCHAR2(150) UNIQUE NOT NULL,
	user_role NUMBER REFERENCES user_roles (role_id),
	
	CONSTRAINT users_pk PRIMARY KEY (user_id)
);

CREATE OR REPLACE PROCEDURE insert_user(
	username IN VARCHAR2, password IN VARCHAR2, fname IN VARCHAR2, lname IN VARCHAR2,
	email IN VARCHAR2, user_role IN NUMBER
)
IS
BEGIN
	INSERT INTO USERS (USERNAME, PASSWORD, FIRST_NAME, LAST_NAME, EMAIL, USER_ROLE)
		VALUES (username, password, fname, lname, email, user_role);
	COMMIT;
END;
{CALL insert_user('yesijava', 'yesi123', 'yesenia', 'avalos', 'ya@ya.com', '2')};


CREATE OR REPLACE PROCEDURE update_user(
	id IN NUMBER, username IN VARCHAR, password IN VARCHAR2, fname IN VARCHAR2, 
	lname IN VARCHAR2, email IN VARCHAR2
)
IS 
BEGIN
	UPDATE users SET username = username, password = password, first_name = fname,
		last_name = lname, email = email WHERE user_id = id;
	COMMIT;
END;


CREATE OR REPLACE PROCEDURE delete_user(id IN NUMBER)
IS
BEGIN 
	DELETE FROM users WHERE user_id = id;
	DELETE FROM REIMBURSEMENT r2 WHERE r_author = id;
END;




DROP TABLE user_roles CASCADE CONSTRAINTS;
CREATE TABLE user_roles (
	role_id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
	user_role VARCHAR2(10),
	
	CONSTRAINT user_roles_pk PRIMARY KEY (role_id)
);

INSERT INTO USER_ROLES (ROLE_ID, USER_ROLE)
	VALUES ('2', 'Employee');


DROP TABLE reimbursement_status CASCADE CONSTRAINTS;
CREATE TABLE reimbursement_status(
	r_status_id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
	r_status VARCHAR2(10) DEFAULT 'Pending',
	
	CONSTRAINT reimbursement_status_pk PRIMARY KEY (r_status_id)
);

INSERT INTO REIMBURSEMENT_STATUS (R_STATUS_ID, R_STATUS)
	VALUES ('3', 'Approved');


DROP TABLE reimbursement_type CASCADE CONSTRAINTS;
CREATE TABLE reimbursement_type(
	r_type_id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
	r_type VARCHAR2(10),
	
	CONSTRAINT reimbursement_type_pk PRIMARY KEY (r_type_id)
);

INSERT INTO REIMBURSEMENT_STATUS
	VALUES (Pending);
